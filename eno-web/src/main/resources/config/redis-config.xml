<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for PetClinic on JPA. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 创建连接 -->
	<!-- <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		p:hostName="127.0.0.1" p:port="6379" p:usePool="true"> </bean> -->
	
	
	 <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" lazy-init="false"
        p:hostName="${redis.host}"
        p:port="${redis.port}"
        p:database="${redis.database}"
        p:timeout="${redis.timeout}"
        p:use-pool="${redis.use.pool}"
        p:poolConfig-ref="redisPoolConfig"/>
       
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" lazy-init="false"
        p:maxIdle="${redis.maxIdle}"
        p:minIdle="${redis.minIdle}"
        p:testOnBorrow="${redis.testOnBorrow}"
        p:testOnReturn="${redis.testOnReturn}"
        p:testWhileIdle="${redis.testWhileIdle}"
        p:timeBetweenEvictionRunsMillis="${redis.timeBetweenEvictionRunsMillis}"
        p:numTestsPerEvictionRun="${redis.numTestsPerEvictionRun}"
        p:softMinEvictableIdleTimeMillis="${redis.softMinEvictableIdleTimeMillis}"
        p:minEvictableIdleTimeMillis="${redis.minEvictableIdleTimeMillis}" />
 

	<!-- 192.168.3.12 -->

	<!-- 定义Redis模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connectionFactory-ref="redisConnectionFactory">
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer">
				<constructor-arg value="GBK" />
			</bean>
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" >
				<constructor-arg value="GBK" />
			</bean>
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>

	</bean>

	<!-- the default ConnectionFactory -->
	<bean id="jdkSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />

	<!-- 消息侦听 -->
	<bean id="redisMessageListener" class="com.energicube.eno.message.redis.RedisMessageListener" />
	
	<bean id="redisOpsService" class="com.energicube.eno.message.redis.RedisOpsService" />
	
	<bean id="messageListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="redisMessageListener" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>

	<bean id="redisContainer"
		class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="messageListeners">
			<!-- map of listeners and their associated topics (channels or/and patterns) -->
			<map>
				<entry key-ref="messageListener">
					<bean class="org.springframework.data.redis.listener.ChannelTopic">
						<constructor-arg value="chan:cov_tag" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="redisContainer1" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="messageListeners">
			<!-- map of listeners and their associated topics (channels or/and patterns) -->
			<map>
				<entry key-ref="messageListener">
					<bean class="org.springframework.data.redis.listener.ChannelTopic">
						<constructor-arg value="chan:cov_alarm" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<!-- 监听表达式变化值的通道 -->
	<bean id="redisContainer2" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="messageListeners">
			<!-- map of listeners and their associated topics (channels or/and patterns) -->
			<map>
				<entry key-ref="messageListener">
					<bean class="org.springframework.data.redis.listener.ChannelTopic">
						<constructor-arg value="chan:uckernal_2_tomcat:expvalue" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- 客流通道 -->
	<bean id="redisContainer3" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="messageListeners">
			<map>
				<entry key-ref="messageListener">
					<bean class="org.springframework.data.redis.listener.ChannelTopic">
						<constructor-arg value="chan:l2_2_tomcat_4_passenger" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
</beans>